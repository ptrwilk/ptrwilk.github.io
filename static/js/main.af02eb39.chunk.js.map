{"version":3,"sources":["Components/Wrapper/Wrapper.tsx","Components/Cards/Animation.tsx","Components/Cards/FrontBackCard.tsx","Components/CountDown/CountDown.tsx","context/useCountDown.ts","Components/Cards/HiddenContentCard.tsx","Components/Cards/FrontCard.tsx","Components/Cards/BackCard.tsx","Components/Cards/CardBase.tsx","store/hook.ts","helpers/helpers.ts","features/cards/slice.ts","features/settings/slice.ts","Components/Cards/Card.tsx","Components/Cards/Cards.tsx","Firebase/firebase.ts","Components/Buttons/AddButton.tsx","Components/Buttons/LoginButton.tsx","App.tsx","reportWebVitals.ts","Firebase/helpers.ts","features/cards/fb.ts","store/store.ts","features/cards/epic.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","maxWidth","marginLeft","marginRight","Wrapper","children","styles","Box","className","Animation2","isAnimating","front","back","FrontBackCard","state","useState","isAnimation","setAnimation","isNew","setNew","useEffect","setTimeout","Text","props","Typography","sx","color","textAlign","flex","text","Separator","width","height","backgroundColor","CountDown","seconds","time","day","Math","floor","hour","minute","second","secondsToTime","allZeros","display","justifyContent","mx","toString","useCountDown","setSeconds","stopped","useRef","current","x","stop","start","HiddenContentCard","onDoubleClick","onTimePassed","countDown","Paper","alignItems","FrontCard","onClick","position","padding","overflow","BackCard","onConfirm","onCancel","bottom","left","right","IconButton","e","stopPropagation","ml","mr","CardBase","frontText","backText","onHiddenDoubleClick","first","handleClick","useAppDispatch","useDispatch","useAppSelector","useSelector","getTimeLeft","card","greater","lower","res","getDiffTimeInSeconds","stageTime","Date","getTime","cardsSlice","createSlice","name","initialState","cards","reducers","loadCards","action","loadCardsSuccess","payload","forEach","undefined","push","addCard","addCardSuccess","id","cardId","unshift","increaseStage","find","stage","stages","length","dateNow","getSeconds","getTimeNowWithSecondsAdded","increaseStageSuccess","zeroStage","getCards","map","actions","settingsSlice","getStages","settings","Card","dispatch","setState","currentState","Cards","Grid","container","index","item","mt","initializeApp","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","database","ref","AddButton","value","setValue","isOpen","setOpen","fontSize","Modal","open","TextField","onChange","target","multiline","Button","JSON","parse","LoginButton","auth","signInWithPopup","GoogleAuthProvider","App","loaded","setLoaded","onAuthStateChanged","uid","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","getData","collectionName","a","firestore","currentUser","collection","doc","Promise","onSnapshot","snapshot","data","addData","uuid_v4","set","updateDate","update","updateCard","epicMiddleware","createEpicMiddleware","store","configureStore","reducer","cardsReducer","settingsReducer","middleware","rootEpic","combineEpics","action$","state$","pipe","filter","isOfType","switchMap","from","response","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af02eb39.chunk.js","sourcesContent":["import {Box, Theme} from \"@mui/material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        maxWidth: 1200,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    }\r\n}))\r\n\r\ninterface IProps {\r\n\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nconst Wrapper: React.FC<IProps> = ({children}) => {\r\n\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Box className={styles.root}>\r\n            {children}\r\n        </Box>\r\n    )\r\n\r\n};\r\n\r\nexport default Wrapper;","import React, {useState} from \"react\";\r\nimport {Box, Typography} from \"@mui/material\";\r\nimport '../../Styles/card/_animatedCard.scss';\r\n\r\ninterface IProps{\r\n    isAnimating : boolean;\r\n    front ?: React.ReactNode;\r\n    back ?: React.ReactNode;\r\n}\r\n\r\nconst Animation : React.FC<IProps> = ({isAnimating}) => {\r\n\r\n\r\n    return (\r\n        <Box className={`card ${isAnimating && \"front\"}`}>\r\n            <Box className={\"card-img\"}/>\r\n            <Box className={`text`}>\r\n                <Typography sx={{color: \"red\"}}>Lorem10</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const Animation2 : React.FC<IProps> = ({isAnimating, front, back}) => {\r\n\r\n\r\n    return (\r\n        <Box className={`animated ${isAnimating && \"front\"}`}>\r\n            <Box className={\"image\"}>\r\n                {front}\r\n            </Box>\r\n            <Box className={`text`}>\r\n                {back}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Animation","import {Box, Button, Typography} from \"@mui/material\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport '../../Styles/card/_animatedCard.scss';\r\nimport {Animation2} from \"./Animation\";\r\n\r\n\r\ninterface IProps {\r\n    state: \"front\" | \"back\";\r\n    front: (isAnimating: boolean) => React.ReactNode;\r\n    back: React.ReactNode;\r\n}\r\n\r\nconst FrontBackCard: React.FC<IProps> = ({\r\n                                             state,\r\n                                             front,\r\n                                             back\r\n                                         }) => {\r\n\r\n    const [isAnimation, setAnimation] = useState<boolean>();\r\n    const [isNew, setNew] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        if (isAnimation || isNew)\r\n            return;\r\n\r\n        setAnimation(true);\r\n\r\n        setTimeout(() => {\r\n\r\n            setAnimation(false);\r\n\r\n        }, 1000)\r\n\r\n    }, [state]);\r\n\r\n    useEffect(() => {\r\n        setNew(false);\r\n    }, [])\r\n\r\n    return (\r\n\r\n        <Box>\r\n            {isAnimation ?\r\n\r\n                <>\r\n                    {state === \"back\" && <Animation2 isAnimating={isAnimation} front={front(isAnimation)} back={back}/>}\r\n                    {state === \"front\" && <Animation2 isAnimating={isAnimation} front={back} back={front(isAnimation)}/>}\r\n                </>\r\n\r\n\r\n                :\r\n                <>\r\n                    {state === \"front\" && front(false)}\r\n                    {state === \"back\" && back}\r\n                </>\r\n            }\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default FrontBackCard;","import {Box, Theme, Typography} from \"@mui/material\";\r\nimport {SxProps} from \"@mui/system\";\r\nimport React from \"react\";\r\n\r\ntype Time = {\r\n    day: number;\r\n    hour: number;\r\n    minute: number;\r\n    second: number\r\n}\r\n\r\nconst secondsToTime = (seconds: number): Time => {\r\n\r\n    const d = Math.floor(seconds / (3600 * 24));\r\n    const h = Math.floor(seconds % (3600 * 24) / 3600);\r\n    const m = Math.floor(seconds % 3600 / 60);\r\n    const s = Math.floor(seconds % 60);\r\n\r\n\r\n    return {\r\n        day: d,\r\n        hour: h,\r\n        minute: m,\r\n        second: s\r\n    };\r\n\r\n}\r\n\r\ninterface IProps {\r\n    seconds: number\r\n}\r\n\r\nconst CountDown: React.FC<IProps> = ({seconds}) => {\r\n\r\n    if(seconds < 0)\r\n        seconds = 0;\r\n\r\n    const time = secondsToTime(seconds);\r\n\r\n    const allZeros = time.day === 0 && time.hour === 0 && time.minute === 0 && time.second === 0;\r\n\r\n    return (\r\n        <Box sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"space-between\",\r\n            width: \"100%\",\r\n            mx: 4\r\n        }}>\r\n            {time.day !== 0 &&\r\n            <>\r\n                <Text text={time.day.toString()}/>\r\n                <Separator/>\r\n            </>\r\n            }\r\n            {time.hour !== 0 &&\r\n            <>\r\n                <Text text={time.hour.toString()}/>\r\n                <Separator/>\r\n            </>\r\n            }\r\n            {time.minute !== 0 &&\r\n            <>\r\n                <Text text={time.minute.toString()}/>\r\n                <Separator/>\r\n            </>\r\n            }\r\n            {\r\n                !allZeros &&\r\n                <Text text={time.second.toString()}/>\r\n            }\r\n        </Box>\r\n    )\r\n}\r\n\r\nconst Text = (props: { text: string }) => {\r\n\r\n    return (\r\n        <Typography sx={{color: \"white\", textAlign: \"center\", flex: 1}}>{props.text}</Typography>\r\n    )\r\n}\r\n\r\nconst Separator = (props: { sx?: SxProps<Theme> }) => {\r\n\r\n    const {sx} = props;\r\n\r\n    return (\r\n        <Box sx={{...sx, width: 2, height: 24, backgroundColor: \"white\"}}/>\r\n    )\r\n}\r\n\r\nexport default CountDown;","import {useEffect, useRef, useState} from \"react\";\r\n\r\ntype Response = {\r\n    start: (seconds: number) => void;\r\n    stop: () => void;\r\n    seconds: number;\r\n}\r\n\r\nconst useCountDown = (): Response => {\r\n\r\n    const [seconds, setSeconds] = useState(-1);\r\n    const stopped = useRef(false);\r\n\r\n    useEffect(() => {\r\n\r\n        setTimeout(() => {\r\n\r\n            if (seconds > 0 && !stopped.current) {\r\n\r\n                setSeconds(x => x - 1);\r\n            }\r\n\r\n        }, 1000)\r\n\r\n\r\n    }, [seconds])\r\n\r\n    useEffect(() => {\r\n\r\n        return () => {\r\n            stopped.current = true;\r\n        }\r\n\r\n    }, [])\r\n\r\n\r\n    return {\r\n        stop: () => {\r\n            stopped.current = true;\r\n        },\r\n        start: (seconds: number) => {\r\n            stopped.current = false;\r\n            setSeconds(seconds);\r\n        },\r\n        seconds: seconds\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default useCountDown;","import {Paper} from \"@mui/material\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport CountDown from \"../CountDown/CountDown\";\r\nimport useCountDown from \"../../context/useCountDown\";\r\n\r\ninterface IProps {\r\n    onDoubleClick: () => void;\r\n    seconds: number;\r\n    onTimePassed: () => void;\r\n    isAnimating: boolean;\r\n}\r\n\r\nconst HiddenContentCard: React.FC<IProps> = ({\r\n                                                 isAnimating,\r\n                                                 onDoubleClick,\r\n                                                 seconds,\r\n                                                 onTimePassed\r\n                                             }) => {\r\n\r\n    const countDown = useCountDown();\r\n\r\n    //TODO bez setTimeout wywala error\r\n    if (countDown.seconds === 0) {\r\n        setTimeout(() => {\r\n            onTimePassed();\r\n        }, 200);\r\n    }\r\n\r\n    const handleClick = () => {\r\n\r\n        countDown.stop();\r\n        onDoubleClick();\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isAnimating)\r\n            countDown.start(seconds);\r\n    }, [])\r\n\r\n    return (\r\n        <Paper onDoubleClick={handleClick}\r\n               sx={{\r\n                   display: \"flex\",\r\n                   justifyContent: \"center\",\r\n                   alignItems: \"center\",\r\n                   width: 200,\r\n                   height: 200,\r\n                   backgroundColor: \"rgba(22,111,147,0.83)\"\r\n               }}>\r\n\r\n            <CountDown seconds={countDown.seconds}/>\r\n        </Paper>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HiddenContentCard","import {Box, Paper, Typography} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IProps {\r\n    text: string,\r\n    onClick: () => void\r\n}\r\n\r\nconst FrontCard: React.FC<IProps> = ({text, onClick}) => {\r\n\r\n\r\n    return (\r\n        <Paper onClick={onClick} sx={{\r\n            position: \"relative\",\r\n            width: 200,\r\n            height: 200,\r\n            padding: 1,\r\n            backgroundColor: \"white\",\r\n            overflow: \"hidden\"\r\n        }}>\r\n            <Typography\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100%\",\r\n                    textAlign: \"center\"\r\n\r\n                }}> {text}\r\n            </Typography>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n\r\nexport default FrontCard;","import {Box, IconButton, Paper, Typography} from \"@mui/material\";\r\nimport React from \"react\";\r\nimport CheckIcon from '@mui/icons-material/Check';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\n\r\ninterface IProps {\r\n    text: string,\r\n    onClick: () => void;\r\n    onConfirm : () => void;\r\n    onCancel : () => void;\r\n}\r\n\r\nconst BackCard: React.FC<IProps> = ({text, onClick, onConfirm, onCancel}) => {\r\n\r\n    const handleConfirm = (e: any) => {\r\n\r\n        e.stopPropagation();\r\n\r\n        onConfirm();\r\n    }\r\n\r\n    const handleCancel = (e: any) => {\r\n\r\n        e.stopPropagation();\r\n\r\n        onCancel();\r\n    }\r\n\r\n    return (\r\n        <Paper onClick={onClick} sx={{\r\n            position: \"relative\",\r\n            width: 200,\r\n            height: 200,\r\n            backgroundColor: \"#ffffff\",\r\n        }}>\r\n            <Typography\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100%\",\r\n                    textAlign: \"center\"\r\n\r\n                }}> {text}\r\n            </Typography>\r\n            <Box sx={{\r\n                position: \"absolute\",\r\n                bottom: 0,\r\n                left: 0,\r\n                right: 0,\r\n                height: 70,\r\n                display: \"flex\",\r\n                justifyContent: \"space-between\",\r\n                alignItems: \"center\",\r\n            }}>\r\n                <IconButton onClick={handleCancel}\r\n                            color={\"secondary\"}\r\n                            sx={{ ml : 2}}>\r\n                    < ClearIcon sx={{color: \"red\"}}/>\r\n                </IconButton>\r\n                <IconButton onClick={handleConfirm}\r\n                            sx={{ mr : 2}}>\r\n                    < CheckIcon sx={{color: \"green\"}}/>\r\n                </IconButton>\r\n            </Box>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default BackCard;","import {Box, Button, Paper, Typography} from \"@mui/material\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport '../../Styles/card/_animatedCard.scss';\r\nimport FrontBackCard from \"./FrontBackCard\";\r\nimport HiddenContentCard from \"./HiddenContentCard\";\r\nimport FrontCard from \"./FrontCard\";\r\nimport BackCard from \"./BackCard\";\r\n\r\nexport type State = \"Hidden\" | \"Front\" | \"Back\";\r\n\r\ninterface IProps {\r\n    state: State;\r\n    frontText: string;\r\n    backText: string;\r\n    onHiddenDoubleClick: () => void;\r\n    onClick: (currentState: State) => void;\r\n    onConfirm: () => void;\r\n    onCancel: () => void;\r\n    seconds: number;\r\n    onTimePassed : () => void;\r\n}\r\n\r\nconst CardBase: React.FC<IProps> = ({\r\n                                        state,\r\n                                        frontText,\r\n                                        backText,\r\n                                        onHiddenDoubleClick,\r\n                                        onClick,\r\n                                        onConfirm,\r\n                                        onCancel,\r\n                                        seconds,\r\n                                        onTimePassed\r\n\r\n                                    }) => {\r\n\r\n    const first = useRef<\"front\" | \"back\">(state === \"Hidden\" ? \"front\" : \"back\");\r\n\r\n    const second = useRef<\"front\" | \"back\">(state === \"Front\" || state === \"Hidden\" ? \"front\" : \"back\");\r\n\r\n    //TODO: Zamienic to jakos na state machine, bo bog jeden wie o co tu chodzi\r\n    if (state === \"Front\" && second.current === \"back\") {\r\n        first.current = \"front\";\r\n        second.current = \"front\";\r\n    }\r\n\r\n    if (state === \"Front\" && first.current === \"front\") {\r\n        first.current = \"back\";\r\n    }\r\n\r\n    if (state === \"Hidden\" && first.current === \"back\") {\r\n        first.current = \"front\";\r\n    }\r\n\r\n    if (state === \"Back\" && first.current === \"front\") {\r\n        first.current = \"back\";\r\n        second.current = \"back\";\r\n    }\r\n\r\n    if (state === \"Back\" && second.current === \"front\") {\r\n        second.current = \"back\";\r\n    }\r\n\r\n    const handleClick = () => {\r\n        onClick(state);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FrontBackCard\r\n                state={first.current}\r\n                front={\r\n                    isAnimating =>\r\n                    <HiddenContentCard\r\n                        isAnimating={isAnimating}\r\n                        onDoubleClick={onHiddenDoubleClick}\r\n                        seconds={seconds}\r\n                        onTimePassed={onTimePassed}\r\n                    />\r\n                }\r\n                back={\r\n                    <FrontBackCard state={second.current}\r\n                                   front={isAnimating =>\r\n                                       <FrontCard onClick={handleClick}\r\n                                                  text={frontText}/>\r\n                                   }\r\n                                   back={\r\n                                       <BackCard\r\n                                           text={backText}\r\n                                           onClick={handleClick}\r\n                                           onConfirm={onConfirm}\r\n                                           onCancel={onCancel}\r\n                                       />\r\n                                   }\r\n                    />\r\n                }\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default CardBase;","import {TypedUseSelectorHook, useDispatch, useSelector} from 'react-redux'\r\nimport {AppDispatch, RootState} from \"./store\";\r\n\r\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;","import {ICard} from \"../store/interfaces\";\r\n\r\nexport const getTimeInSeconds = () => {\r\n\r\n    const dateNow = new Date();\r\n\r\n    return dateNow.getTime() / 1000;\r\n}\r\n\r\n\r\nexport const getTimeNowWithSecondsAdded = (seconds : number) => {\r\n\r\n    const dateNow = new Date();\r\n\r\n    return dateNow.setSeconds(dateNow.getSeconds() + seconds) / 1000\r\n}\r\n\r\nexport const getDiffTimeInSeconds = (greater : number, lower :number) => {\r\n\r\n    const res = Math.floor(greater - lower);\r\n\r\n    return res < 0 ? 0 : res;\r\n}\r\n\r\n\r\nexport const getTimeLeft = (card : ICard) : number => {\r\n\r\n\r\n    return getDiffTimeInSeconds(card.stageTime as number, getTimeInSeconds());\r\n}","import {createSlice, PayloadAction} from \"@reduxjs/toolkit\";\r\nimport {ICard, ICards, ISettings, IStage} from \"../../store/interfaces\";\r\nimport {RootState} from \"../../store/store\";\r\nimport {getDiffTimeInSeconds, getTimeInSeconds, getTimeLeft, getTimeNowWithSecondsAdded} from \"../../helpers/helpers\";\r\n\r\nconst initialState: ICards = {\r\n    cards: []\r\n}\r\n\r\n\r\nexport const cardsSlice = createSlice({\r\n    name: \"cards\",\r\n    initialState,\r\n    reducers: {\r\n        loadCards: (state, action: PayloadAction) => {\r\n        },\r\n        loadCardsSuccess: (state, action: PayloadAction<ICard[]>) => {\r\n\r\n\r\n            action.payload.forEach(x => {\r\n\r\n                if (x.stageTime === undefined) {\r\n\r\n                    x.stageTime = 0;\r\n                }\r\n\r\n                state.cards.push(x);\r\n            })\r\n        },\r\n        addCard: (state, action: PayloadAction<ICard>) => {\r\n\r\n        },\r\n        addCardSuccess: (state, action: PayloadAction<{ card: ICard, cardId: string }>) => {\r\n\r\n            action.payload.card.id = action.payload.cardId;\r\n\r\n            state.cards.unshift(action.payload.card);\r\n        },\r\n        increaseStage: (state,\r\n                        action: PayloadAction<{ card: ICard, stages: IStage[] }>) => {\r\n\r\n            const payload = action.payload;\r\n            const card = state.cards.find(x => x.id === payload.card.id)!;\r\n            const stage = payload.stages.find(x => x.stage === payload.card.stage + 1) ?? payload.stages[payload.stages.length - 1];\r\n\r\n            const seconds = getTimeNowWithSecondsAdded(stage.time);\r\n\r\n            action.payload.card.stageTime = seconds;\r\n            action.payload.card.stage = stage.stage;\r\n\r\n            card.stageTime = seconds\r\n            card.stage = stage.stage;\r\n        },\r\n        increaseStageSuccess: (state, action: PayloadAction) => {},\r\n        zeroStage: (state, action: PayloadAction<ICard>) => {\r\n\r\n            const card = state.cards.find(x => x.id === action.payload.id)!;\r\n\r\n            card.stage = 0;\r\n        }\r\n\r\n    }\r\n})\r\n\r\nexport const getCards = (state: RootState) => state.cards.cards.map(x => ({...x}));\r\n\r\nexport const getCardsOrdered = (state : RootState) => {\r\n\r\n    let cards = state.cards.cards.map(x => ({...x}));\r\n\r\n    cards.sort((x,y) => {\r\n\r\n        if(getTimeLeft(x) === 0)\r\n            return -1;\r\n\r\n        return 1;\r\n    });\r\n\r\n    return cards;\r\n}\r\n\r\nexport const {\r\n    loadCards,\r\n    loadCardsSuccess,\r\n    addCard,\r\n    addCardSuccess,\r\n    increaseStage,\r\n    increaseStageSuccess,\r\n    zeroStage\r\n} = cardsSlice.actions;\r\n\r\nexport default cardsSlice.reducer;","import {createSlice} from \"@reduxjs/toolkit\";\r\nimport {ISettings} from \"../../store/interfaces\";\r\nimport {RootState} from \"../../store/store\";\r\n\r\nconst initialState: ISettings = {\r\n\r\n    stages: [\r\n        {stage: 0, time: 0},\r\n        {stage: 1, time: 600},\r\n        {stage: 2, time: 3600},\r\n        {stage: 3, time: 86400},\r\n        {stage :4, time : 172800},\r\n        {stage :5, time : 432000},\r\n        {stage :6, time : 864000},\r\n        {stage :7, time : 2592000}\r\n    ]\r\n\r\n}\r\n\r\nexport const settingsSlice = createSlice({\r\n    name: \"settings\",\r\n    initialState,\r\n    reducers: {}\r\n})\r\n\r\nexport const getStages = (state : RootState) => state.settings.stages;\r\n\r\nexport default settingsSlice.reducer;","import CardBase, {State} from \"./CardBase\";\r\nimport {Box, Button, Theme} from \"@mui/material\";\r\nimport React, {useState} from \"react\";\r\nimport {ICard} from \"../../store/interfaces\";\r\nimport {SxProps} from \"@mui/system\"\r\nimport {useAppDispatch, useAppSelector} from \"../../store/hook\";\r\nimport {increaseStage, zeroStage} from \"../../features/cards/slice\";\r\nimport {getStages} from \"../../features/settings/slice\";\r\nimport {getTimeLeft} from \"../../helpers/helpers\";\r\n\r\ninterface IProps {\r\n    card: ICard,\r\n    sx?: SxProps<Theme>\r\n}\r\n\r\nconst Card: React.FC<IProps> = ({card, sx}) => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const stages = useAppSelector(getStages);\r\n    const [state, setState] = useState<State>(\"Hidden\");\r\n\r\n    const handleDoubleClick = () => {\r\n        setState(\"Front\");\r\n    }\r\n\r\n    const handleClick = (currentState: State) => {\r\n\r\n        if (currentState === \"Front\")\r\n            setState(\"Back\");\r\n        else\r\n            setState(\"Front\");\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n        setState(\"Hidden\");\r\n        dispatch(increaseStage({card, stages}));\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        setState(\"Front\");\r\n        dispatch(zeroStage(card));\r\n    }\r\n\r\n    const handleTimePassed = () => {\r\n\r\n        setState(\"Front\");\r\n    }\r\n\r\n\r\n    return (\r\n        <Box sx={{...sx, height: 200, width: 200}}>\r\n            <CardBase state={state}\r\n                      frontText={card.front}\r\n                      backText={card.back}\r\n                      onHiddenDoubleClick={handleDoubleClick}\r\n                      onClick={handleClick}\r\n                      onConfirm={handleConfirm}\r\n                      onCancel={handleCancel}\r\n                      seconds={getTimeLeft(card)}\r\n                      onTimePassed={handleTimePassed}\r\n            />\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\nexport default Card","import Card from \"./Card\";\r\nimport React, {useContext} from \"react\";\r\nimport CardContext from \"../../context/CardContext\";\r\nimport {Box, Grid} from \"@mui/material\";\r\nimport {useAppSelector} from \"../../store/hook\";\r\nimport {getCards, getCardsOrdered} from \"../../features/cards/slice\";\r\n\r\nconst Cards = () => {\r\n\r\n    const cards = useAppSelector(getCards);\r\n\r\n\r\n\r\n    return (\r\n        <Grid container sx={{justifyContent: \"center\"}}>\r\n            {cards.map((card, index) => {\r\n                return (\r\n                    <Grid item key={index}>\r\n                        <Card sx={{mx: 2, mt: 2}}  card={card}/>\r\n                    </Grid>\r\n                )\r\n            })}\r\n        </Grid>\r\n    )\r\n}\r\n\r\nexport default Cards","\r\nimport firebase from \"firebase/compat\";\r\nimport initializeApp = firebase.initializeApp;\r\nimport {useEffect} from \"react\";\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n\r\n// Your web app's Firebase configuration\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n\r\n    apiKey: \"AIzaSyChS5eDjKc6GZO9KmaYZMYWpItvN9Dg3O8\",\r\n\r\n    authDomain: \"flipy-50e22.firebaseapp.com\",\r\n\r\n    databaseURL: \"https://flipy-50e22-default-rtdb.firebaseio.com\",\r\n\r\n    projectId: \"flipy-50e22\",\r\n\r\n    storageBucket: \"flipy-50e22.appspot.com\",\r\n\r\n    messagingSenderId: \"100967498287\",\r\n\r\n    appId: \"1:100967498287:web:26c00fd67f4198a4c37cda\"\r\n\r\n};\r\n\r\n\r\n// Initialize Firebase\r\n\r\nconst app = initializeApp(firebaseConfig);\r\nconst databaseRef = firebase.database().ref();\r\n\r\nexport {firebase}\r\n\r\n\r\n// HELPERS useEffect(() => {\r\n//\r\n//     const z = new firebase.auth.GoogleAuthProvider();\r\n//\r\n//     const k = firebase.auth().currentUser\r\n//\r\n//     //   firebase.auth().signInWithPopup(z);\r\n//\r\n//     // firebase.auth().signOut()\r\n//\r\n//     firebase.auth().onAuthStateChanged(state => {\r\n//\r\n//         console.log(state?.uid);\r\n//         console.log(\"ELOSZKA\");\r\n//     })\r\n//\r\n// }, [])","import {Box, Button, IconButton, Modal, Paper, TextField} from \"@mui/material\";\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport {useAppDispatch} from \"../../store/hook\";\r\nimport {addCard} from \"../../features/cards/slice\";\r\nimport {getTimeInSeconds, getTimeNowWithSecondsAdded} from \"../../helpers/helpers\";\r\nimport {MutableRefObject, RefObject, useRef, useState} from \"react\";\r\nimport {ICard} from \"../../store/interfaces\";\r\n\r\nconst AddButton  = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n\r\n    const [value, setValue] = useState(\"\");\r\n    const [isOpen, setOpen] = useState(false);\r\n\r\n    const handleClick = () => {\r\n\r\n        setOpen(true);\r\n    }\r\n\r\n    const handleConfirm = () => {\r\n\r\n        const cards = JSON.parse(value) as ICard[];\r\n\r\n        cards.forEach(x => {\r\n            dispatch(addCard({...x, id : \"\", stage : 0, stageTime : 0}))\r\n        })\r\n\r\n        setOpen(false);\r\n    }\r\n\r\n\r\n    return(\r\n        <>\r\n            <IconButton onClick={handleClick} sx={{position : \"fixed\", right : 5, bottom : 5, width : 100, height : 100}}>\r\n                <AddIcon sx={{fontSize : 40}}/>\r\n            </IconButton>\r\n            <Modal\r\n                open={isOpen}\r\n                aria-labelledby=\"parent-modal-title\"\r\n                aria-describedby=\"parent-modal-description\"\r\n            >\r\n                <Box sx={{display : \"flex\", justifyContent : \"center\", alignItems : \"center\", height : \"100%\"}}>\r\n                    <Paper>\r\n                        <TextField value={value} onChange={e => setValue(e.target.value)} multiline/>\r\n                        <Button onClick={() => setOpen(false)} >Cancel</Button>\r\n                        <Button onClick={handleConfirm}>Confirm</Button>\r\n                    </Paper>\r\n                </Box>\r\n            </Modal>\r\n        </>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default AddButton;","import {Button, IconButton} from \"@mui/material\";\r\nimport LoginIcon from '@mui/icons-material/Login';\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport {firebase} from \"../../Firebase/firebase\";\r\n\r\nconst LoginButton = () => {\r\n\r\n    const handleClick = () => {\r\n\r\n        firebase.auth().signInWithPopup(new firebase.auth.GoogleAuthProvider());\r\n    }\r\n\r\n    return(\r\n        <IconButton onClick={handleClick} sx={{position : \"fixed\", left : 5, bottom : 5, width : 100, height : 100}}>\r\n            <LoginIcon sx={{fontSize : 40}}/>\r\n        </IconButton>\r\n    )\r\n}\r\n\r\n\r\nexport default LoginButton;","import Box from '@mui/material/Box';\nimport React, {useEffect, useState} from 'react';\nimport './App.scss';\nimport Wrapper from \"./Components/Wrapper/Wrapper\";\nimport Cards from \"./Components/Cards/Cards\";\nimport {useAppDispatch} from \"./store/hook\";\nimport {loadCards} from \"./features/cards/slice\";\nimport {firebase} from \"./Firebase/firebase\";\nimport AddButton from \"./Components/Buttons/AddButton\";\nimport LoginButton from \"./Components/Buttons/LoginButton\";\n\n\nfunction App() {\n\n    const dispatch = useAppDispatch();\n\n    const [loaded, setLoaded] = useState(false);\n\n    if(!loaded)\n    {\n        firebase.auth().onAuthStateChanged(auth => {\n\n            if(auth?.uid !== undefined){\n                setLoaded(true);\n            }\n        })\n    }\n\n    useEffect(() => {\n\n        if (loaded)\n            dispatch(loadCards());\n\n    }, [loaded])\n\n    return (\n        <div className=\"App\">\n            <Wrapper>\n                <Box sx={{height: 20}}/>\n                <Cards/>\n                <AddButton />\n                <LoginButton />\n            </Wrapper>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {firebase} from \"./firebase\"\r\nimport {v4 as uuid_v4} from \"uuid\";\r\n\r\nexport const getData = async (collectionName : string): Promise<any[]> => {\r\n\r\n    const firestore = firebase.firestore();\r\n\r\n    let id = firebase.auth().currentUser?.uid;\r\n\r\n    const ref = firestore.collection(\"users\")\r\n        .doc(id)\r\n        .collection(collectionName);\r\n\r\n    const res: any[] = [];\r\n\r\n    return new Promise<any[]>(\r\n        x => {\r\n            ref.onSnapshot(async snapshot => {\r\n                await snapshot.forEach(x => {\r\n\r\n                    res.push(x.data());\r\n                })\r\n                x(res);\r\n            })\r\n        }\r\n    )\r\n}\r\n\r\nexport const addData = async (collectionName: string, data: any): Promise<string> => {\r\n\r\n    const firestore = firebase.firestore();\r\n\r\n    let id = firebase.auth().currentUser?.uid;\r\n\r\n    const ref = firestore.collection(\"users\")\r\n        .doc(id)\r\n        .collection(collectionName);\r\n\r\n    const uid = uuid_v4();\r\n\r\n    data.id = uid;\r\n\r\n    await ref.doc(uid)\r\n        .set(data);\r\n\r\n    return uid;\r\n}\r\n\r\nexport const updateDate = async (collectionName : string, data : any) : Promise<void> => {\r\n\r\n    const firestore = firebase.firestore();\r\n    let id = firebase.auth().currentUser?.uid;\r\n\r\n    const ref = firestore.collection(\"users\")\r\n        .doc(id)\r\n        .collection(collectionName);\r\n\r\n    await ref.doc(data.id)\r\n        .update(data);\r\n}\r\n\r\nexport const deleteDate = async (collectionName: string, id : string) : Promise<void> => {\r\n\r\n    const firestore = firebase.firestore();\r\n\r\n    let userId = firebase.auth().currentUser?.uid;\r\n\r\n    const ref = firestore.collection(\"users\")\r\n        .doc(userId)\r\n        .collection(collectionName);\r\n\r\n\r\n    await ref.doc(id).delete();\r\n}","import {ICard} from \"../../store/interfaces\";\r\nimport {addData, getData, updateDate} from \"../../Firebase/helpers\";\r\n\r\nexport const getCards = async (): Promise<ICard[]> => {\r\n\r\n    const data = await getData(\"cards\");\r\n\r\n    const res: ICard[] = [];\r\n\r\n    data.forEach(x => {\r\n        res.push(x);\r\n    })\r\n\r\n    return res\r\n}\r\n\r\nexport const addCard = async (card: ICard): Promise<string> => {\r\n\r\n    return await addData(\"cards\", card);\r\n}\r\n\r\nexport const updateCard = async (card : ICard) : Promise<void> => {\r\n\r\n    await updateDate(\"cards\", card);\r\n\r\n}","import {combineEpics, createEpicMiddleware} from \"redux-observable\";\r\nimport {configureStore} from \"@reduxjs/toolkit\";\r\nimport {addCardEpic, increaseStageEpic, loadCardsEpic} from \"../features/cards/epic\";\r\nimport cardsReducer from \"../features/cards/slice\";\r\nimport settingsReducer from \"../features/settings/slice\";\r\n\r\nconst epicMiddleware = createEpicMiddleware();\r\n\r\nexport const store = configureStore(\r\n    {\r\n        reducer : {\r\n            cards : cardsReducer,\r\n            settings : settingsReducer\r\n        },\r\n        middleware: [epicMiddleware]\r\n    }\r\n)\r\n\r\nexport const rootEpic = combineEpics(\r\n    increaseStageEpic,\r\n    loadCardsEpic,\r\n    addCardEpic\r\n);\r\n\r\n\r\n\r\nepicMiddleware.run(rootEpic as any);\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof store.getState>;","import {Epic} from \"redux-observable\";\r\nimport {AnyAction} from \"@reduxjs/toolkit\";\r\nimport {RootState} from \"../../store/store\";\r\nimport {delay, filter, startWith, switchMap, tap, map, catchError} from \"rxjs/operators\";\r\nimport {isOfType} from \"typesafe-actions\";\r\nimport {from, of} from \"rxjs\";\r\nimport {addCard, getCards, updateCard} from \"./fb\";\r\nimport {addCardSuccess, increaseStageSuccess, loadCardsSuccess} from \"./slice\";\r\n\r\n\r\nexport const increaseStageEpic: Epic<AnyAction, AnyAction, RootState, {}> = (\r\n    action$,\r\n    state$\r\n): any =>\r\n    action$.pipe(\r\n        filter(isOfType(\"cards/increaseStage\")),\r\n        switchMap(action =>\r\n            from(updateCard(action.payload.card)).pipe(\r\n                map(() => increaseStageSuccess())\r\n            )\r\n        )\r\n    );\r\n\r\nexport const loadCardsEpic: Epic<AnyAction, AnyAction, RootState, {}> = (\r\n    action$,\r\n    state$\r\n): any =>\r\n    action$.pipe(\r\n        filter(isOfType(\"cards/loadCards\")),\r\n        switchMap(action =>\r\n            from(getCards()).pipe(\r\n                map(response => loadCardsSuccess(response))\r\n            )\r\n        )\r\n    );\r\n\r\nexport const addCardEpic: Epic<AnyAction, AnyAction, RootState, {}> = (\r\n    action$,\r\n    state$\r\n): any =>\r\n    action$.pipe(\r\n        filter(isOfType(\"cards/addCard\")),\r\n        switchMap(action =>\r\n            from(addCard(action.payload)).pipe(\r\n                map(response => addCardSuccess({card : action.payload, cardId : response}))\r\n            )\r\n        )\r\n    );","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./store/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store} >\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}