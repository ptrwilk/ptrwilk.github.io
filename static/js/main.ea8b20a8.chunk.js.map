{"version":3,"sources":["Components/Wrapper/Wrapper.tsx","Components/Cards/Animation.tsx","Components/Cards/FrontBackCard.tsx","Components/Cards/HiddenContentCard.tsx","Components/Cards/FrontCard.tsx","Components/Cards/BackCard.tsx","Components/Cards/CardBase.tsx","Components/Cards/Card.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useStyles","makeStyles","theme","root","maxWidth","marginLeft","marginRight","Wrapper","children","styles","Box","className","Animation2","isAnimating","front","back","FrontBackCard","state","useState","isAnimation","setAnimation","isNew","setNew","useEffect","setTimeout","HiddenContentCard","Paper","sx","width","height","backgroundColor","FrontCard","text","onClick","position","padding","overflow","Typography","display","justifyContent","alignItems","textAlign","bottom","right","borderRadius","cursor","BackCard","CardBase","frontText","backText","first","useRef","second","current","Card","setState","Button","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ea8b20a8.chunk.js","sourcesContent":["import {Box, Theme} from \"@mui/material\";\r\nimport {makeStyles} from \"@mui/styles\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        maxWidth: 1200,\r\n        marginLeft: \"auto\",\r\n        marginRight: \"auto\"\r\n    }\r\n}))\r\n\r\ninterface IProps {\r\n\r\n    children: React.ReactNode\r\n}\r\n\r\n\r\nconst Wrapper: React.FC<IProps> = ({children}) => {\r\n\r\n    const styles = useStyles();\r\n\r\n    return (\r\n        <Box className={styles.root}>\r\n            {children}\r\n        </Box>\r\n    )\r\n\r\n};\r\n\r\nexport default Wrapper;","import React, {useState} from \"react\";\r\nimport {Box, Typography} from \"@mui/material\";\r\nimport '../../Styles/card/_card_rotate.scss';\r\n\r\ninterface IProps{\r\n    isAnimating : boolean;\r\n    front ?: React.ReactNode;\r\n    back ?: React.ReactNode;\r\n}\r\n\r\nconst Animation : React.FC<IProps> = ({isAnimating}) => {\r\n\r\n\r\n    return (\r\n        <Box className={`card ${isAnimating && \"front\"}`}>\r\n            <Box className={\"card-img\"}/>\r\n            <Box className={`text`}>\r\n                <Typography sx={{color: \"red\"}}>Lorem10</Typography>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport const Animation2 : React.FC<IProps> = ({isAnimating, front, back}) => {\r\n\r\n\r\n    return (\r\n        <Box className={`animated ${isAnimating && \"front\"}`}>\r\n            <Box className={\"image\"}>\r\n                {front}\r\n            </Box>\r\n            <Box className={`text`}>\r\n                {back}\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default Animation","import {Box, Button, Typography} from \"@mui/material\";\r\nimport React, {useEffect, useState} from \"react\";\r\nimport '../../Styles/card/_card_rotate.scss';\r\nimport Animation, { Animation2 } from \"./Animation\";\r\n\r\n\r\ninterface IProps {\r\n    state: \"front\" | \"back\";\r\n    front: React.ReactNode;\r\n    back: React.ReactNode;\r\n}\r\n\r\nconst FrontBackCard: React.FC<IProps> = ({state, front, back}) => {\r\n\r\n    const [isAnimation, setAnimation] = useState<boolean>();\r\n    const [isNew, setNew] = useState(true);\r\n\r\n    useEffect(() => {\r\n\r\n        if(isAnimation || isNew)\r\n            return;\r\n\r\n        setAnimation(true);\r\n\r\n        setTimeout(() => {\r\n\r\n            setAnimation(false);\r\n\r\n        }, 1000)\r\n\r\n    },[state]);\r\n\r\n    useEffect(() => {\r\n        setNew(false);\r\n    },[])\r\n\r\n    return (\r\n        <Box >\r\n            {isAnimation ?\r\n\r\n                <>\r\n                    {state === \"back\" && <Animation2 isAnimating={isAnimation} front={front} back={back}/> }\r\n                    {state === \"front\" && <Animation2 isAnimating={isAnimation} front={back} back={front}/> }\r\n                </>\r\n\r\n\r\n                :\r\n                <>\r\n                    {state === \"front\" && front}\r\n                    {state === \"back\" && back}\r\n                </>\r\n            }\r\n        </Box>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default FrontBackCard;","import {Paper} from \"@mui/material\";\r\n\r\nconst HiddenContentCard = () => {\r\n\r\n    return(\r\n        <Paper sx={{width: 200, height: 200, backgroundColor: \"#2f2f2f\"}} />\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default HiddenContentCard","import {Box, Paper, Typography} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IProps {\r\n    text: string,\r\n    onClick: () => void\r\n}\r\n\r\nconst FrontCard: React.FC<IProps> = ({text, onClick}) => {\r\n\r\n\r\n    return (\r\n        <Paper sx={{\r\n            position: \"relative\",\r\n            width: 200,\r\n            height: 200,\r\n            padding : 1,\r\n            backgroundColor: \"white\",\r\n            overflow: \"hidden\"\r\n        }}>\r\n            <Typography\r\n                sx={{\r\n                display: \"flex\",\r\n                justifyContent: \"center\",\r\n                alignItems: \"center\",\r\n                height: \"100%\",\r\n                textAlign : \"center\"\r\n\r\n            }}> {text}</Typography>\r\n            <Box sx={{\r\n                position: \"absolute\",\r\n                bottom: -30,\r\n                right: -30,\r\n                width: 70,\r\n                height: 70,\r\n                borderRadius: \"50%\",\r\n                backgroundColor: \"#d5d5d5\",\r\n                cursor : \"pointer\"\r\n            }}/>\r\n        </Paper>\r\n    )\r\n}\r\n\r\n\r\nexport default FrontCard;","import {Paper, Typography} from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\ninterface IProps {\r\n    text: string\r\n}\r\n\r\nconst BackCard : React.FC<IProps> = ({text}) => {\r\n\r\n    return(\r\n        <Paper sx={{width: 200, height: 200, backgroundColor: \"#d5d5d5\"}}>\r\n            <Typography\r\n                sx={{\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                    alignItems: \"center\",\r\n                    height: \"100%\",\r\n                    textAlign : \"center\"\r\n\r\n                }}> {text}</Typography>\r\n        </Paper>\r\n    )\r\n}\r\n\r\nexport default BackCard;","import {Box, Button, Paper, Typography} from \"@mui/material\";\r\nimport React, {useEffect, useRef, useState} from \"react\";\r\nimport '../../Styles/card/_card_rotate.scss';\r\nimport FrontBackCard from \"./FrontBackCard\";\r\nimport HiddenContentCard from \"./HiddenContentCard\";\r\nimport FrontCard from \"./FrontCard\";\r\nimport BackCard from \"./BackCard\";\r\n\r\nexport type State = \"Hidden\" | \"Front\" | \"Back\";\r\n\r\ninterface IProps {\r\n    state: State;\r\n    frontText : string;\r\n    backText : string;\r\n}\r\n\r\nconst CardBase: React.FC<IProps> = ({state, frontText, backText}) => {\r\n\r\n    const first = useRef<\"front\" | \"back\">(state === \"Hidden\" ? \"front\" : \"back\");\r\n\r\n    const second = useRef<\"front\" | \"back\">(state === \"Front\" || state === \"Hidden\" ? \"front\" : \"back\");\r\n\r\n    //TODO: Zamienic to jakos na state machine, bo bog jeden wie o co tu chodzi\r\n    if (state === \"Front\" && second.current === \"back\") {\r\n        first.current = \"front\";\r\n        second.current = \"front\";\r\n    }\r\n\r\n    if (state === \"Front\" && first.current === \"front\") {\r\n        first.current = \"back\";\r\n    }\r\n\r\n    if (state === \"Hidden\" && first.current === \"back\") {\r\n        first.current = \"front\";\r\n    }\r\n\r\n    if (state === \"Back\" && first.current === \"front\") {\r\n        first.current = \"back\";\r\n        second.current = \"back\";\r\n    }\r\n\r\n    if (state === \"Back\" && second.current === \"front\") {\r\n        second.current = \"back\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FrontBackCard\r\n                state={first.current}\r\n                front={\r\n                    <HiddenContentCard/>\r\n                }\r\n                back={\r\n                    <FrontBackCard state={second.current}\r\n                                   front={\r\n                                       <FrontCard onClick={() => {\r\n                                       }}\r\n                                                  text={frontText}/>\r\n                                   }\r\n                                   back={\r\n                                       <BackCard text={backText}/>\r\n                                   }\r\n                    />\r\n                }\r\n            />\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default CardBase;","import CardBase, {State} from \"./CardBase\";\r\nimport {Button} from \"@mui/material\";\r\nimport {useState} from \"react\";\r\n\r\nconst Card = () => {\r\n\r\n    const [state, setState] = useState<State>(\"Hidden\");\r\n\r\n    return(\r\n        <>\r\n            <CardBase state={state} frontText={\"EGG\"} backText={\"JAJO\"}/>\r\n\r\n            <Button onClick={() => setState(\"Hidden\")}>Hidden</Button>\r\n            <Button onClick={() => setState(\"Front\")}>Front</Button>\r\n            <Button onClick={() => setState(\"Back\")}>Back</Button>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default Card","import Box from '@mui/material/Box';\nimport React from 'react';\nimport './App.scss';\nimport Wrapper from \"./Components/Wrapper/Wrapper\";\nimport Card from \"./Components/Cards/Card\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Wrapper>\n                <Box sx={{height: 20}}/>\n                <Card />\n            </Wrapper>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}